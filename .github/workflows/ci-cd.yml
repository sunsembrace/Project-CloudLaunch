#Step 3.0. 
#Getting started to understand Workflow via workflow syntax docs.
#SET UP GITHUT  SECRETS

#Step 3.1 - Defines name of the pipeline & When to trigger (e.g push on main).
name: Build & Reploy

on:
    push:
        branches: [main]

#Step 3.2 - Defining job environment machine for Github Actions to run on. 
jobs:
    docker-build-push:
        runs-on: ubuntu latest

#step 3.3 Checkout the repo for github to fetch code to build & deploy.
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

#Steps 3.4 - Checkout the repo for Docker BuildX to build multi-platform Docker Images - more powerful & flexible. 
            - name: Set up Docker Buildx
              uses: dockersetup-buildx-action@v2

#Steps 3.5 Log in to Docker Hub.
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

#Steps 3.6 - Build & push docker image.
            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: yourdockerhubusername/my-python-app:latest

#Steps 3.7 Set up kubectl to Deploy the Kubernetes.
            - name: Set up kubectl
              uses: azure/setup-kubectl@v3
              with:
                version: 'latest'

#Steps 3.8 - Deploy to Kubernetes
            - name: Deploy to Kubernetes
              env:
                KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
              run: |
                echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
                export KUBECONFIG=$PWD/kubeconfig
                kubectl apply -f k8s/deployment.yaml
                kubectl apply -f k8s/service.yaml
